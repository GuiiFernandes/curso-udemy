html {
    font-size: 62.5%;
    scroll-behavior: smooth;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
    font-size: 1.6rem;
}

/*Gap pode não ser aceito em todos os navegadores, assim como grid. Portanto é importante que seja observado onde ele vai funcionar no site: can i use, buscando "can i use grid gap".*/
/*Para substituir Gap podemos criar margin bottom e right, porém isso cria uma margem indesejada a direita do grid. Para corrigir podemos criar um .container fora da grid.*/
.container { /*Coloco o tamanho da minha grid no container.*/
    max-width: 1200px;
    margin: 0 auto;
    overflow-x: hidden;
}

.grid {
    /*width: calc(100% + 30px);*/ /*Podemos usar um calculo com a função calc() para dimensionar o nosso grid de forma responsiva baseado no tamanho do .container, porém isso cria um overflow, para resolver isso, podemos criar um overflow-x: hidden.*/
    /*Só que calc também não é aceito por todos os navegadores. Ficando assim*/
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    /*A forma mais fácil de resolver é criando uma margin-right no .grid de -30px.*/
    margin-right: -30px;
}

.grid div {
    background: cyan;
    border: solid rgba(0,0,0,0.2);
    min-height: 100px;
    /*margin que cria o gap.*/
    margin-bottom: 30px;
    margin-right: 30px;
}